{"article": {"title": "Airflow Api tests", "id": 783067, "description": "This is a collection of Pytest for the 2.0 Stable Rest Apis for Apache Airflow. I have another repo where you could setup airflow locally and play around with these. I am used to RestAssured, but trying out pytest here.", "published": false, "body_markdown": "# airflow-api-tests\nThis is a collection of Pytest for the 2.0 Stable Rest Apis for Apache Airflow. I have another repo where you could setup airflow locally and play around with these. I am used to RestAssured, but trying out pytest here.\n\n<h3 align=\"center\">Apache Airflow 2.0 Stable Rest Api calls - Python</h3>\n\n<p align=\"center\"> I am used to RestAssured for api testing. Trying out python api testing with Airflow stable rest api\n    <br> \n</p>\n\n## \ud83d\udcdd Table of Contents\n\n- [About](#about)\n- [Uses](#uses)  \n- [Getting Started](#getting_started)\n- [Usage](#usage)\n- [Running the tests](#tests)\n- [Github Workflow](#githubworkflow)\n- [Airflow Apis](#airflow_api)\n- [Authors](#authors)\n- [Acknowledgments](#acknowledgement)\n\n## \ud83e\uddd0 About <a name = \"about\"></a>\nThis repository will contain api calls to stable Airflow Rest apis. Having worked in airflow, I felt the lack of it. Come Airflow 2.0, it resolved the issues for me.\nIt is also an attempt to understand api testing with python as I usually prefer Rest Assured (Java).  This is a WIP repo as I continue to build and add calls to all apis. \nI have another repo which can help people setup airflow locally and then play around with these api.\n\n## Uses <a name=\"uses\"></a>\nListing out some reasons why I created this for myself:\n- Learn about airflow apis.\n- Learn about Python api testing.\n- Understand use cases of api and document for future needs.\n\n## \ud83c\udfc1 Getting Started <a name = \"getting_started\"></a>\nSequence of steps to be followed to be able to use this successfully:\n- Clone the [airflow-docker](https://github.com/anilkulkarni87/airflow-docker) repo.\n- Follow the instructions there to start running airflow locally.\n- Execute some DAGS that are part of my repo or create your own DAGS.\n- Start playing with the apis.\n\n## \ud83c\udf88 Usage <a name=\"usage\"></a>\n\n## \ud83d\udd27 Running the tests <a name = \"tests\"></a>\nHere is an example of how you could run the tests. I will continue to evolve this\n```\npytest test_dag.py\n```\n\n## Github Workflow for running tests <a name=\"githubworkflow\"></a>\n  I added this step for me to understand more about github workflows and how i can leverage it for this specific usecase. Essentially what I will have to do is within the workflow:\n- Clone airflow-docker repo\n- Start Airflow\n- Run these tests\n- Do something with the results\n\n## \u26cf\ufe0fAirflow APIs <a name = \"airflow_api\"></a>\nI know you could get your hands on the swagger doc for these. But I still wanted to list down here.\n- [Get Config](https://github.com/anilkulkarni87/airflow-api-tests/blob/main/tests/test_config.py)\n    - This is usually forbidden from the administrator owing to security reasons.\n- [Connection](https://github.com/anilkulkarni87/airflow-api-tests/blob/main/tests/test_connection.py)\n  - Get connections : To list all connections currently available\n  - Post : To create a new connection Id\n  - Patch : To patch means to update an existing connection Id\n  - Delete : To delete a connection\n  - Get Connection Id : Get details of a specific connection based on the id\n- [DAG](https://github.com/anilkulkarni87/airflow-api-tests/blob/main/tests/test_dag.py) \n  - Get Dag Source code : We can get the dag source code by passing a file token, We can get file_token by calling the get dag by dag id\n  - Get DAGS : Able to get all DAGS\n  - Get DAG Info : Get basic info about a DAG\n  - Patch : This is to update the dag. You can refer the example I have.\n  - Post - clear tasks instances of a DAG : #TODO\n  - Get Dag details : Get Basic info about dags\n  - Get Dag tasks : Get all tasks for the dag.\n  - Get Task details : Get a representation of the task\n  - Post UpdateTaskInstanceState : #TODO\n  \n\n## \u270d\ufe0f Authors <a name = \"authors\"></a>\n\n- [@anilkulkarni87](https://github.com/anilkulkarni87)", "tags": ["airflow", " airflowapi", " apitest"], "series": null, "canonical_url": "", "cover_image": "https://cwiki.apache.org/confluence/download/attachments/145723561/airflow_white_bg.png?api=v2"}}