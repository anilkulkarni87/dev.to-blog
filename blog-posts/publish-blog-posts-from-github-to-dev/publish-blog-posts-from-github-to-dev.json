{"article": {"title": "Publish blog posts from GIT to dev.to", "id": 746550, "description": "Automate publishing your article from git markdown to dev", "published": false, "body_markdown": "<div align=\"center\">\n\n[![Actions Status](https://github.com/anilkulkarni87/dev.to/workflows/CI/badge.svg)](https://github.com/anilkulkarni87/dev.to/actions)\n\n</div>\n\n# Publish blog posts from GITHUB to dev.to\n\nThis is a template repo which where I am testing and building solution for automated publishing of my articles/blog posts to dev. It's just a lot of work to post the same article across places and hence I decided to automate publishing my posts to dev and eventually any other personal blogs.\n\nDev exposes API through which you could do a lot of things. I am currently only creating articles which will be in your drafts. \n\n![image](https://user-images.githubusercontent.com/10644132/124338461-f7744b00-db5c-11eb-8047-eb073cc632f3.png)\nGenerated via code(Python)\n\n## Approach\n- Clone this repo, cleanup the files and arrange your blog posts.\n- Create a markdown file for your blog post. You can check the folder structure in the repo.\n- Setup your DEV TOKEN in your repo with the name as `GIT_TO_DEV`\n- Commit the changes made to your .md files.\n- Voila after the workflow is complete, you can see the blog posts created in draft. \n- Also, I am persisting the json payload of the article with the id populated.\n\n### Next steps\n- Identify new files and modified markdown files\n- For new files, create new articles\n- For modified, update the articles\n\n\n### Thanks\n- [Ana Mar\u00eda Mart\u00ednez G\u00f3mez](https://github.com/Ana06/get-changed-files) - Tracking changed files\n- [Stefan Zweifel](https://github.com/stefanzweifel/git-auto-commit-action) - Committing the changes file from a workflow\n- [Maxime](https://dev.to/maxime1992/manage-your-dev-to-blog-posts-from-a-git-repo-and-use-continuous-deployment-to-auto-publish-update-them-143j) - For the triggering a thought\n- [Chris Amico](https://github.com/eyeseast/python-frontmatter) - For parsing front matter from Markdown file\n\n### Bugs/Changes\nPlease modify any typos or corrections and create a pull request to make this better.", "tags": ["devto", "publication", "continuousdeployment"], "series": null, "canonical_url": "", "cover_image": "https://user-images.githubusercontent.com/10644132/124338461-f7744b00-db5c-11eb-8047-eb073cc632f3.png"}}